#link to randomized hurdles: https://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Hurdle%204&url=worlds%2Ftutorial_en%2Fhurdle4.json
#link to maze: https://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Maze&url=worlds%2Ftutorial_en%2Fmaze1.json
#solutions I came up with to make a robot complete a maze by itself 

def turn_right():
    turn_left()
    turn_left()
    turn_left()

'''
solution to making the robot jump over hurdles
def over_hurdle():
    turn_left()
    n = 0
    while(wall_on_right()):
         move()
         n += 1
    turn_right()
    move()
    turn_right()
    while(n != 0):
        move()
        n -= 1
    turn_left()

while(not at_goal()):
    if wall_in_front():
        over_hurdle()
    else:
        move()
'''

 
while(not at_goal()):
    if right_is_clear() and front_is_clear():
        turn_right()
        move()
    elif not right_is_clear() and front_is_clear():
        move()
    elif right_is_clear() and not front_is_clear():
        turn_right()
        move()
    elif front_is_clear():
        move()
    else:
        turn_left()
        if front_is_clear():
            move()

'''optimized:
while(not at_goal()):
    if right_is_clear():
        turn_right()
        move()
    elif front_is_clear():
        move()
    else:
        turn_left()
'''
    
